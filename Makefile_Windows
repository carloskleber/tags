#MKLROOT is defined by a bash script that is shipped together with intel's MKL
#source mklvars.sh intel64
#"C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2019.1.144\windows\mkl\bin\mklvars.bat" intel64
#manual set:
MKLROOT = "C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.1.144\\windows\\mkl"
#make sure the intel MKL redist is in yout PATH. For command prompt path set:
#SET PATH=%PATH%;"C:\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.1.144\\windows\\redist\\intel64_win\\mkl"
INTELLINK = "C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.1.144\\windows\\mkl\\lib\\intel64_win\\mkl_rt.lib"
INTELFLAGS = -DMKL_ILP64
#The shared library slatec is assumed to be in your path.
#If it is not, append its location to the INCLUDE variable or
#build and install it with "make slatec"

CUBATUREPATH = cubature
SLATECPATH = slatec
WOLFRAMPATH = "C:\\Program Files\\Wolfram Research\\Mathematica\\11.3\\SystemFiles\\IncludeFiles\\C"
INCLUDE = -I. -I$(CUBATUREPATH) -I$(MKLROOT)\\include -I$(SLATECPATH)\\lib -I$(MKLROOT)\\include
LINK = -L. $(INTELLINK) $(SLATECPATH)\\lib\\libslatec.a -lgfortran
CFLAGS = -Wall -fno-exceptions -std=c11 $(INTELFLAGS) -Werror -O3
#CFLAGS = -Wall -std=c11 $(INTELFLAGS) -g
OBJECTS = Electrode.o auxiliary.o hcubature.o

#Compilers
CC = gcc
FC = gfortran

.DEFAULT_GOAL := dynamicLibrary

.PHONY	:	clean cleanout allclean slatec libhem.so dynamicLibrary wolfram

clean	:
		rm -f *.o *.obj *.dat examples\\*.o examples\\*.obj examples\\*.dat

cleanout	:
		rm -f *.a *.exe *.dll examples\\*.a examples\\*.exe

allclean	:
		make clean
		make cleanout
		cd $(SLATECPATH) && $(MAKE) clean
		cd $(CUBATUREPATH) && $(MAKE) clean

hcubature.o	:	$(CUBATUREPATH)\\hcubature.c
		$(CC) -fPIC $(CFLAGS) $(INCLUDE) -c $(CUBATUREPATH)\\hcubature.c $(LINK)

auxiliary.o	:	auxiliary.c
		$(CC) -fPIC $(CFLAGS) $(INCLUDE) -c auxiliary.c $(LINK)

Electrode.o	:	Electrode.c auxiliary.o hcubature.o
		$(CC) -fPIC $(CFLAGS) $(INCLUDE) -c Electrode.c $(LINK)

libhem.dll	:
		make dynamicLibrary

dynamicLibrary	:
		$(CC) -fPIC -shared $(CFLAGS) $(INCLUDE) -o libhem.dll Electrode.c auxiliary.c $(CUBATUREPATH)\\hcubature.c $(LINK)

test	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o testing.exe testing.c $(OBJECTS) $(LINK)

testDLL	:	libhem.dll
		$(CC) $(CFLAGS) $(INCLUDE) -o testingDLL.a testing.c '-Wl,-rpath,$$ORIGIN' $(LINK) libhem.dll

slatec	:
		cd $(SLATECPATH) && $(MAKE) FC=$(FC) all

wolfram	:
		$(CC) -fPIC -shared -std=c11 $(INTELFLAGS) -Werror -O3 $(INCLUDE) -I$(WOLFRAMPATH) -o libhem_mma.dll InterfaceWolfram.c Electrode.c auxiliary.c $(CUBATUREPATH)\\hcubature.c $(LINK)

timing	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o timing.exe examples\\timing.c $(OBJECTS) $(LINK)

example20pwrd02grcev	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o ex20pwrd02grcev.exe examples\\ex20pwrd02grcev.c $(OBJECTS) $(LINK)

example51emc03grcev	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o ex51emc03grcev.exe examples\\ex51emc03grcev.c $(OBJECTS) $(LINK)

example12pwrd01grcev	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o ex12pwrd01grcev.exe examples\\ex12pwrd01grcev\ex12pwrd01grcev.c $(OBJECTS) $(LINK)

exampleAlipioSchroederRCA	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o AlipioSchroederRCA.exe examples\\AlipioSchroederRCA.c $(OBJECTS) $(LINK)

miranda64	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o examples\\miranda64.exe examples\\grounding_miranda64.c $(OBJECTS) $(LINK)

malha01	:	$(OBJECTS)
		$(CC) $(CFLAGS) $(INCLUDE) -o examples\\malha01.exe examples\\malha01.c $(OBJECTS) $(LINK)
